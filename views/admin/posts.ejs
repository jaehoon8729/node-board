<%- include('../partials/header', { title: '게시글 관리', activePage: 'admin' }) %>

<style>
    .load-more-btn {
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }
    
    .load-more-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,123,255,0.3);
    }
    
    .new-loaded {
        animation: fadeInUp 0.5s ease forwards;
        opacity: 0;
        transform: translateY(20px);
    }
    
    @keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    .loading-dots {
        display: inline-block;
    }
    
    .loading-dots::after {
        content: '';
        animation: dots 1.5s infinite;
    }
    
    @keyframes dots {
        0%, 20% { content: ''; }
        40% { content: '.'; }
        60% { content: '..'; }
        90%, 100% { content: '...'; }
    }
    
    /* 더보기 버튼 컨테이너가 항상 중앙 정렬되도록 보장 */
    .text-center {
        text-align: center !important;
    }
    
    .text-center .load-more-btn {
        display: inline-block;
        margin: 0 auto;
    }
</style>

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>게시글 관리</h2>
    <div>
        <a href="/board/write" class="btn btn-success me-2">
            <i class="bi bi-plus-circle"></i> 새 게시글
        </a>
        <a href="/admin" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> 대시보드
        </a>
    </div>
</div>

<!-- 상태 필터 탭 -->
<div class="card mb-3">
    <div class="card-header">
        <ul class="nav nav-pills card-header-pills">
            <li class="nav-item">
                <a class="nav-link <%= currentStatus === 'all' ? 'active' : '' %>" 
                   href="/admin/posts?status=all">
                    전체 <span class="badge bg-secondary ms-1"><%= statusCounts.all %></span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link <%= currentStatus === 'published' ? 'active' : '' %>" 
                   href="/admin/posts?status=published">
                    발행됨 <span class="badge bg-success ms-1"><%= statusCounts.published %></span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link <%= currentStatus === 'scheduled' ? 'active' : '' %>" 
                   href="/admin/posts?status=scheduled">
                    예약중 <span class="badge bg-warning ms-1"><%= statusCounts.scheduled %></span>
                </a>
            </li>
        </ul>
    </div>
</div>

<!-- 게시글 목록 -->
<div class="card">
    <div class="card-body p-0">
        <% if (posts.length === 0) { %>
            <div class="text-center py-5 text-muted">
                <i class="bi bi-file-earmark-text fs-1"></i>
                <p class="mt-3 mb-0">게시글이 없습니다.</p>
            </div>
        <% } else { %>
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th style="width: 8%">ID</th>
                            <th style="width: 35%">제목</th>
                            <th style="width: 12%">작성자</th>
                            <th style="width: 10%">상태</th>
                            <th style="width: 15%">예약시간</th>
                            <th style="width: 10%">조회수</th>
                            <th style="width: 10%">관리</th>
                        </tr>
                    </thead>
                    <tbody id="postsList">
                        <% posts.forEach(post => { %>
                            <tr>
                                <td><%= post.id %></td>
                                <td>
                                    <% if (post.status === 'published') { %>
                                        <a href="/board/<%= post.id %>" class="text-decoration-none">
                                            <%= post.title %>
                                        </a>
                                    <% } else { %>
                                        <%= post.title %>
                                    <% } %>
                                    
                                    <% if (post.file_original_name) { %>
                                        <% 
                                            const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp', '.svg'];
                                            const fileExt = post.file_original_name.toLowerCase().substring(post.file_original_name.lastIndexOf('.'));
                                            const isImage = imageExtensions.includes(fileExt);
                                        %>
                                        <% if (isImage) { %>
                                            <i class="bi bi-image text-success ms-1" title="이미지 첨부"></i>
                                        <% } else { %>
                                            <i class="bi bi-paperclip text-primary ms-1" title="파일 첨부"></i>
                                        <% } %>
                                    <% } %>
                                </td>
                                <td><%= post.custom_author || post.user.username %></td>
                                <td>
                                    <% if (post.status === 'published') { %>
                                        <span class="badge bg-success">발행됨</span>
                                    <% } else if (post.status === 'scheduled') { %>
                                        <span class="badge bg-warning">예약중</span>
                                    <% } %>
                                </td>
                                <td>
                                    <% if (post.publish_at) { %>
                                        <small class="text-muted">
                                            <%= new Date(post.publish_at).toLocaleString() %>
                                        </small>
                                    <% } else if (post.status === 'published') { %>
                                        <small class="text-muted">
                                            <%= new Date(post.created_at).toLocaleString() %>
                                        </small>
                                    <% } else { %>
                                        <span class="text-muted">-</span>
                                    <% } %>
                                </td>
                                <td>
                                    <% if (post.status === 'published') { %>
                                        <%= post.views %>
                                    <% } else { %>
                                        <span class="text-muted">-</span>
                                    <% } %>
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <% if (post.status === 'scheduled') { %>
                                            <!-- 예약 게시글 액션 -->
                                            <button type="button" class="btn btn-outline-success btn-sm publish-now-btn" 
                                                    data-post-id="<%= post.id %>" title="즉시 발행">
                                                <i class="bi bi-send"></i>
                                            </button>
                                            <button type="button" class="btn btn-outline-danger btn-sm delete-post-btn" 
                                                    data-post-id="<%= post.id %>" title="삭제">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        <% } else { %>
                                            <!-- 발행된 게시글 액션 -->
                                            <button type="button" class="btn btn-outline-danger btn-sm delete-post-btn" 
                                                    data-post-id="<%= post.id %>" title="삭제">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        <% } %>
                                    </div>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        <% } %>
    </div>
</div>

<!-- 더보기 버튼 -->
<% if (typeof hasMore !== 'undefined' && hasMore) { %>
    <div class="text-center mt-4">
        <button type="button" class="btn btn-outline-primary load-more-btn" id="loadMoreBtn">
            <i class="bi bi-arrow-down-circle me-2"></i>
            <span id="loadMoreText">더보기</span>
            <small class="d-block text-muted mt-1">(<span id="loadMoreCount">15</span>개 더 불러오기)</small>
        </button>
    </div>
<% } %>

<!-- 로딩 스피너 -->
<div class="text-center mt-4 d-none" id="loadingSpinner">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">로딩중...</span>
    </div>
    <div class="mt-2 text-muted">
        게시글을 불러오는 중<span class="loading-dots"></span>
    </div>
</div>

<!-- 액션 폼들 (숨김) -->
<form id="actionForm" method="POST" style="display: none;">
    <input type="hidden" name="action" id="actionType">
</form>

<script>
document.addEventListener('DOMContentLoaded', function() {
    console.log('관리자 페이지 JavaScript 로드됨');
    
    // 폼이 존재하는지 확인
    const actionForm = document.getElementById('actionForm');
    if (!actionForm) {
        console.error('actionForm을 찾을 수 없습니다.');
        return;
    }
    
    console.log('actionForm 찾음:', actionForm);
    
    // 더보기 기능 변수들
    let currentPage = <%= currentPage || 1 %>;
    let isLoading = false;
    const loadMoreBtn = document.getElementById('loadMoreBtn');
    const loadingSpinner = document.getElementById('loadingSpinner');
    const postsList = document.getElementById('postsList');
    const currentStatus = '<%= currentStatus || "all" %>';
    
    // 더보기 버튼 클릭 이벤트
    if (loadMoreBtn) {
        loadMoreBtn.addEventListener('click', function() {
            if (isLoading) return;
            
            isLoading = true;
            loadMoreBtn.classList.add('d-none');
            loadingSpinner.classList.remove('d-none');
            
            const nextPage = currentPage + 1;
            const searchParams = new URLSearchParams({
                page: nextPage,
                status: currentStatus
            });
            
            fetch(`/admin/api/posts?${searchParams}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.posts.length > 0) {
                        // 새로운 게시글들을 테이블에 추가
                        data.posts.forEach((post, index) => {
                            setTimeout(() => {
                                const row = createPostRow(post);
                                postsList.appendChild(row);
                            }, index * 100); // 100ms씩 지연하여 순차 애니메이션
                        });
                        
                        currentPage = nextPage;
                        
                        // 더 불러올 게시글이 있는지 확인
                        if (data.hasMore) {
                            loadMoreBtn.classList.remove('d-none');
                            document.getElementById('loadMoreCount').textContent = '15';
                        }
                        
                        // 새로 추가된 버튼들에 이벤트 리스너 추가
                        attachButtonEvents();
                    } else {
                        // 더 이상 불러올 게시글이 없음
                        const noMoreRow = document.createElement('tr');
                        noMoreRow.className = 'new-loaded';
                        noMoreRow.innerHTML = `
                            <td colspan="7" class="text-center py-4 text-muted">
                                <i class="bi bi-check-circle text-success me-2"></i> 
                                <strong>모든 게시글을 불러왔습니다.</strong>
                            </td>
                        `;
                        postsList.appendChild(noMoreRow);
                        
                        setTimeout(() => {
                            noMoreRow.classList.remove('new-loaded');
                        }, 100);
                    }
                })
                .catch(error => {
                    console.error('게시글 로딩 오류:', error);
                    alert('게시글을 불러오는데 실패했습니다.');
                })
                .finally(() => {
                    isLoading = false;
                    loadingSpinner.classList.add('d-none');
                });
        });
    }
    
    // 게시글 행 생성 함수
    function createPostRow(post) {
        const row = document.createElement('tr');
        row.className = 'new-loaded'; // 애니메이션을 위한 클래스
        
        // 첨부파일 아이콘 처리
        let fileIcon = '';
        if (post.file_original_name) {
            const fileExt = post.file_original_name.toLowerCase().substring(post.file_original_name.lastIndexOf('.'));
            const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp', '.svg'];
            const isImage = imageExtensions.includes(fileExt);
            
            if (isImage) {
                fileIcon = '<i class="bi bi-image text-success ms-1" title="이미지 첨부"></i>';
            } else {
                fileIcon = '<i class="bi bi-paperclip text-primary ms-1" title="파일 첨부"></i>';
            }
        }
        
        // 제목과 링크 처리
        let titleHtml = '';
        if (post.status === 'published') {
            titleHtml = `<a href="/board/${post.id}" class="text-decoration-none">${post.title}</a>`;
        } else {
            titleHtml = post.title;
        }
        
        // 상태 배지
        let statusBadge = '';
        if (post.status === 'published') {
            statusBadge = '<span class="badge bg-success">발행됨</span>';
        } else if (post.status === 'scheduled') {
            statusBadge = '<span class="badge bg-warning">예약중</span>';
        }
        
        // 시간 표시
        let timeDisplay = '';
        if (post.publish_at) {
            timeDisplay = `<small class="text-muted">${new Date(post.publish_at).toLocaleString()}</small>`;
        } else if (post.status === 'published') {
            timeDisplay = `<small class="text-muted">${new Date(post.created_at).toLocaleString()}</small>`;
        } else {
            timeDisplay = '<span class="text-muted">-</span>';
        }
        
        // 조회수
        let viewsDisplay = post.status === 'published' ? post.views : '<span class="text-muted">-</span>';
        
        // 액션 버튼들
        let actionButtons = '';
        if (post.status === 'scheduled') {
            actionButtons = `
                <button type="button" class="btn btn-outline-success btn-sm publish-now-btn" 
                        data-post-id="${post.id}" title="즉시 발행">
                    <i class="bi bi-send"></i>
                </button>
                <button type="button" class="btn btn-outline-danger btn-sm delete-post-btn" 
                        data-post-id="${post.id}" title="삭제">
                    <i class="bi bi-trash"></i>
                </button>
            `;
        } else {
            actionButtons = `
                <button type="button" class="btn btn-outline-danger btn-sm delete-post-btn" 
                        data-post-id="${post.id}" title="삭제">
                    <i class="bi bi-trash"></i>
                </button>
            `;
        }
        
        row.innerHTML = `
            <td>${post.id}</td>
            <td>${titleHtml}${fileIcon}</td>
            <td>${post.username}</td>
            <td>${statusBadge}</td>
            <td>${timeDisplay}</td>
            <td>${viewsDisplay}</td>
            <td>
                <div class="btn-group btn-group-sm">
                    ${actionButtons}
                </div>
            </td>
        `;
        
        // 애니메이션 시작을 위해 약간의 지연 후 클래스 제거
        setTimeout(() => {
            row.classList.remove('new-loaded');
        }, 100);
        
        return row;
    }
    
    // 버튼 이벤트 리스너 연결 함수
    function attachButtonEvents() {
        // 즉시 발행 버튼들에 이벤트 리스너 추가
        const publishButtons = document.querySelectorAll('.publish-now-btn');
        publishButtons.forEach(button => {
            if (!button.hasEventListener) {
                button.addEventListener('click', function() {
                    const postId = this.getAttribute('data-post-id');
                    publishNow(postId);
                });
                button.hasEventListener = true;
            }
        });
        
        // 삭제 버튼들에 이벤트 리스너 추가
        const deleteButtons = document.querySelectorAll('.delete-post-btn');
        deleteButtons.forEach(button => {
            if (!button.hasEventListener) {
                button.addEventListener('click', function() {
                    const postId = this.getAttribute('data-post-id');
                    deletePost(postId);
                });
                button.hasEventListener = true;
            }
        });
    }
    
    // 초기 버튼 이벤트 연결
    attachButtonEvents();
});

// 즉시 발행
function publishNow(postId) {
    console.log('publishNow 함수 호출됨, postId:', postId);
    
    if (confirm('게시글을 즉시 발행하시겠습니까?')) {
        const form = document.getElementById('actionForm');
        if (!form) {
            console.error('actionForm을 찾을 수 없습니다.');
            alert('오류가 발생했습니다. 페이지를 새로고침해주세요.');
            return;
        }
        
        form.action = `/admin/posts/${postId}/action`;
        document.getElementById('actionType').value = 'publish_now';
        
        console.log('폼 제출 중... action:', form.action, 'actionType:', document.getElementById('actionType').value);
        form.submit();
    }
}

// 게시글 삭제
function deletePost(postId) {
    console.log('deletePost 함수 호출됨, postId:', postId);
    
    if (confirm('정말로 이 게시글을 삭제하시겠습니까?\n삭제된 게시글은 복구할 수 없습니다.')) {
        const form = document.getElementById('actionForm');
        if (!form) {
            console.error('actionForm을 찾을 수 없습니다.');
            alert('오류가 발생했습니다. 페이지를 새로고침해주세요.');
            return;
        }
        
        form.action = `/admin/posts/${postId}/action`;
        document.getElementById('actionType').value = 'delete';
        
        console.log('폼 제출 중... action:', form.action, 'actionType:', document.getElementById('actionType').value);
        form.submit();
    }
}

// 테스트 함수
function testButtons() {
    console.log('버튼 테스트 함수');
    alert('JavaScript가 정상적으로 작동합니다!');
}
</script>

<%- include('../partials/footer') %>
