<%- include('../partials/header', { title: '게시글 작성', activePage: 'board' }) %>

<div class="row justify-content-center">
    <div class="col-md-8">
        <h2 class="mb-4">게시글 작성</h2>
        
        <div class="card">
            <div class="card-body">
                <form action="/board/write" method="POST" enctype="multipart/form-data">
                    <div class="mb-3">
                        <label for="title" class="form-label">제목</label>
                        <input type="text" class="form-control" id="title" name="title" 
                               required maxlength="200" autofocus>
                    </div>
                    
                    <div class="mb-3">
                        <label for="content" class="form-label">내용</label>
                        <textarea class="form-control" id="content" name="content" 
                                  rows="10" required></textarea>
                    </div>
                    
                    <div class="mb-3">
                        <label for="file" class="form-label">첨부파일</label>
                        <input type="file" class="form-control" id="file" name="file">
                        <div class="form-text">
                            <i class="bi bi-info-circle"></i> 
                            최대 50MB까지 업로드 가능합니다.
                        </div>
                        <div id="fileInfo" class="mt-2"></div>
                    </div>
                    
                    <!-- 관리자만 예약 발행 기능 사용 가능 -->
                    <% if (locals.user && locals.user.is_admin) { %>
                        <div class="mb-3">
                            <label class="form-label">발행 설정</label>
                            <div class="card border-light bg-light">
                                <div class="card-body">
                                    <div class="row g-3">
                                        <div class="col-md-6">
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="publishType" 
                                                       id="publishNow" value="now" checked>
                                                <label class="form-check-label" for="publishNow">
                                                    <i class="bi bi-send"></i> 즉시 발행
                                                </label>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="publishType" 
                                                       id="schedule" value="schedule">
                                                <label class="form-check-label" for="schedule">
                                                    <i class="bi bi-calendar-event"></i> 예약 발행
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- 예약 발행 시간 설정 -->
                                    <div id="scheduleSettings" class="mt-3 d-none">
                                        <div class="row g-3">
                                            <div class="col-md-6">
                                                <label for="scheduleDate" class="form-label">발행 날짜</label>
                                                <input type="date" class="form-control" id="scheduleDate" 
                                                       name="scheduleDate" min="">
                                            </div>
                                            <div class="col-md-6">
                                                <label for="scheduleTime" class="form-label">발행 시간</label>
                                                <input type="time" class="form-control" id="scheduleTime" 
                                                       name="scheduleTime">
                                            </div>
                                        </div>
                                        <div class="form-text mt-2">
                                            <i class="bi bi-info-circle"></i> 
                                            설정한 시간에 자동으로 게시글이 발행됩니다.
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% } %>
                    
                    <div class="d-flex justify-content-between">
                        <a href="/board" class="btn btn-secondary">
                            <i class="bi bi-arrow-left"></i> 목록으로
                        </a>
                        <button type="submit" class="btn btn-primary" id="submitBtn">
                            <i class="bi bi-check-lg"></i> <span id="submitText">작성하기</span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // 관리자인 경우에만 예약 발행 기능 활성화
    <% if (locals.user && locals.user.is_admin) { %>
        // 오늘 날짜를 최소값으로 설정
        const today = new Date().toISOString().split('T')[0];
        document.getElementById('scheduleDate').min = today;
        
        // 기본값 설정 (현재 시간 + 1시간)
        const now = new Date();
        now.setHours(now.getHours() + 1);
        document.getElementById('scheduleDate').value = now.toISOString().split('T')[0];
        document.getElementById('scheduleTime').value = now.toTimeString().slice(0, 5);
        
        // 발행 타입 변경 이벤트
        const publishTypeRadios = document.querySelectorAll('input[name="publishType"]');
        const scheduleSettings = document.getElementById('scheduleSettings');
        const submitText = document.getElementById('submitText');
        
        publishTypeRadios.forEach(radio => {
            radio.addEventListener('change', function() {
                if (this.value === 'schedule') {
                    scheduleSettings.classList.remove('d-none');
                    submitText.textContent = '예약 등록';
                } else {
                    scheduleSettings.classList.add('d-none');
                    submitText.textContent = '작성하기';
                }
            });
        });
        
        // 폼 제출 전 검증
        document.querySelector('form').addEventListener('submit', function(e) {
            const publishType = document.querySelector('input[name="publishType"]:checked').value;
            
            if (publishType === 'schedule') {
                const scheduleDate = document.getElementById('scheduleDate').value;
                const scheduleTime = document.getElementById('scheduleTime').value;
                
                if (!scheduleDate || !scheduleTime) {
                    e.preventDefault();
                    alert('예약 발행을 위해서는 날짜와 시간을 모두 선택해야 합니다.');
                    return;
                }
                
                // 선택한 시간이 현재 시간보다 미래인지 확인
                const selectedDateTime = new Date(`${scheduleDate}T${scheduleTime}`);
                const now = new Date();
                
                if (selectedDateTime <= now) {
                    e.preventDefault();
                    alert('예약 시간은 현재 시간보다 미래여야 합니다.');
                    return;
                }
            }
        });
    <% } %>
    
    // 파일 선택 시 정보 표시 및 이미지 미리보기
    document.getElementById('file').addEventListener('change', function(e) {
        const file = e.target.files[0];
        const fileInfo = document.getElementById('fileInfo');
        
        if (file) {
            const fileSize = (file.size / (1024 * 1024)).toFixed(2); // MB
            const fileName = file.name;
            const fileExt = fileName.toLowerCase().substring(fileName.lastIndexOf('.'));
            const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp'];
            const isImage = imageExtensions.includes(fileExt);
            
            if (file.size > 50 * 1024 * 1024) { // 50MB 초과
                fileInfo.innerHTML = `
                    <div class="alert alert-danger alert-sm">
                        <i class="bi bi-exclamation-triangle"></i>
                        파일 크기가 50MB를 초과합니다. (${fileSize}MB)
                    </div>
                `;
                e.target.value = ''; // 파일 선택 초기화
            } else {
                let previewHtml = '';
                
                // 이미지인 경우 미리보기 추가
                if (isImage) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        document.getElementById('imagePreview').innerHTML = `
                            <div class="text-center mt-2">
                                <img src="${e.target.result}" alt="미리보기" 
                                     class="img-fluid rounded shadow-sm" 
                                     style="max-height: 200px;">
                            </div>
                        `;
                    };
                    reader.readAsDataURL(file);
                    
                    previewHtml = '<div id="imagePreview"></div>';
                }
                
                fileInfo.innerHTML = `
                    <div class="alert alert-info alert-sm">
                        <i class="bi bi-${isImage ? 'image' : 'file-earmark'}"></i>
                        <strong>${fileName}</strong> (${fileSize}MB)
                        ${isImage ? '<span class="badge bg-success ms-2">이미지</span>' : ''}
                    </div>
                    ${previewHtml}
                `;
            }
        } else {
            fileInfo.innerHTML = '';
        }
    });
});
</script>

<%- include('../partials/footer') %>
